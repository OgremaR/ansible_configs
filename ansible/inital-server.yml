---
- hosts: all
  remote_user: root
  gather_facts: false
  vars:
    create_user: play
    copy_local_key: "{{ lookup('file', lookup('env','HOME') + '/.ssh/id_rsa.pub') }}"
    sys_packages: [ 'python3-apt', 'curl', 'vim', 'git', 'zabbix-agent', 'smartmontools']
  tasks:
  - name: Make sure we have a 'ansible' group
    group:
      name: ansible
      state: present
  - name: Allow 'ansible' group to have passwordless sudo
    lineinfile:
      path: /etc/sudoers
      state: present
      regexp: '^%ansible'
      line: '%wheel ALL=(ALL) NOPASSWD: ALL'
      validate: '/usr/sbin/visudo -cf %s'
  - name: Create a new regular user with sudo privileges
    user:
      name: "{{ create_user }}"
      groups: ansible
      shell: /bin/bash
  - name: Set authorized key for remote user
    authorized_key:
      user: "{{ create_user }}"
      state: present
      key: "{{ copy_local_key }}"
  - name: Disable password authentication for root
    lineinfile:
       path: /etc/ssh/sshd_config
       state: present
       regexp: '^PermitRootLogin'
       line: 'PermitRootLogin prohibit-password'
#Create apt.conf
  - name: "Create apt.conf"
    blockinfile:
      path: /etc/apt/apt.conf
      block: |
         Acquire::http::Proxy "http://172.xxx.xxx.xxx:3128";
         Acquire::::Proxy "true";
  - name: Update apt
    apt: update_cache=yes

  - name: Install required system packages
    apt: name={{ sys_packages }} state=latest
###Monitoring
  - name: "Copy zabbix_agentd.conf"
    copy:
     src: ansible/zabbix_agentd.conf
     dest: /etc/zabbix/zabbix_agentd.conf
  - name: "Copy sudoers file"
    copy:
      src: zabbix/zbx-smartctl/sudoers_zabbix_smartctl
      dest: /etc/sudoers.d/sudoers_zabbix_smartctl
      validate: "visudo -cf %s"
      mode: 0440
  - name: "Copy agent config"
    copy:
      src: zabbix/zbx-smartctl/zabbix_smartctl.conf
      dest: /etc/zabbix/zabbix_agentd.d/zabbix_smartctl.conf
  - name: "Create scripts directory"
    file:
      path: /etc/zabbix/scripts
      state: directory
  - name: "Copy script"
    copy:
      src: zabbix/zbx-smartctl/discovery-scripts/nix/smartctl-disks-discovery.pl
      dest: /etc/zabbix/scripts/smartctl-disks-discovery.pl
      owner: zabbix
      group: zabbix
  - name: "Ensure script is executable"
    file:
      dest: /etc/zabbix/scripts/smartctl-disks-discovery.pl
      mode: a+x
#zbx-mdraid
  - name: "Configure MDmonitoring"
    copy:
      src: zabbix/zbx-mdraid/userparametr_md.conf
      dest: /etc/zabbix/zabbix_agentd.d/userparameter_md.conf
      owner: root
      group: zabbix
  - name: "Restart zabbix-agent via systemd"
    service:
      name: zabbix-agent
      state: restarted
